# xlnx-zynqmp-can.c
xlnx_can_update_irq(uint32_t isr, uint32_t ier, uint32_t irq) "ISR: 0x%08x IER: 0x%08x IRQ: 0x%08x"
xlnx_can_reset(uint32_t val) "Resetting controller with value = 0x%08x"
xlnx_can_rx_fifo_filter_reject(uint32_t id, uint8_t dlc) "Frame: ID: 0x%08x DLC: 0x%02x"
xlnx_can_filter_id_pre_write(uint8_t filter_num, uint32_t value) "Filter%d ID: 0x%08x"
xlnx_can_filter_mask_pre_write(uint8_t filter_num, uint32_t value) "Filter%d MASK: 0x%08x"
xlnx_can_tx_data(uint32_t id, uint8_t dlc, uint8_t db0, uint8_t db1, uint8_t db2, uint8_t db3, uint8_t db4, uint8_t db5, uint8_t db6, uint8_t db7) "Frame: ID: 0x%08x DLC: 0x%02x DATA: 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x"
xlnx_can_rx_data(uint32_t id, uint32_t dlc, uint8_t db0, uint8_t db1, uint8_t db2, uint8_t db3, uint8_t db4, uint8_t db5, uint8_t db6, uint8_t db7) "Frame: ID: 0x%08x DLC: 0x%02x DATA: 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x 0x%02x"
xlnx_can_rx_discard(uint32_t status) "Controller is not enabled for bus communication. Status Register: 0x%08x"

# xlnx-versal-canfd.c
xlnx_canfd_update_irq(char *path, uint32_t isr, uint32_t ier, uint32_t irq) "%s: ISR: 0x%08x IER: 0x%08x IRQ: 0x%08x"
xlnx_canfd_rx_fifo_filter_reject(char *path, uint32_t id, uint8_t dlc) "%s: Frame: ID: 0x%08x DLC: 0x%02x"
xlnx_canfd_rx_data(char *path, uint32_t id, uint8_t dlc, uint8_t flags) "%s: Frame: ID: 0x%08x DLC: 0x%02x CANFD Flag: 0x%02x"
xlnx_canfd_tx_data(char *path, uint32_t id, uint8_t dlc, uint8_t flgas) "%s: Frame: ID: 0x%08x DLC: 0x%02x CANFD Flag: 0x%02x"
xlnx_canfd_reset(char *path, uint32_t val) "%s: Resetting controller with value = 0x%08x"

# nxp-flexcan.c
flexcan_can_write_register(char *path, uint64_t offset, uint32_t size, uint64_t value, uint64_t pc) "%s: offset: 0x%" PRIx64 " size: 0x%x value: 0x%" PRIx64 " @0x%" PRIx64
flexcan_can_read_register(char *path, uint64_t offset, uint32_t size, uint64_t value, bool freeze, bool lp, bool fd, bool rx_fifo, bool erx_fifo, uint64_t pc) "%s: offset: 0x%" PRIx64 " size: 0x%x value: 0x%" PRIx64 " freeze_mode: %i, low_power_mode: %i, FD: %i, RX_FIFO: %i, ERX_FIFO: %i @ 0x%" PRIx64
flexcan_can_message_buffer_write(char *path, uint64_t offset, uint32_t size, uint64_t value, uint64_t pc) "%s: offset: 0x%" PRIx64 " size: 0x%x value: 0x%" PRIx64 " @ 0x%" PRIx64
flexcan_canfd_message_buffer_write(char *path, uint64_t offset, uint32_t size, uint64_t value, uint64_t pc) "%s: offset: 0x%" PRIx64 " size: 0x%x value: 0x%" PRIx64 " @ 0x%" PRIx64
flexcan_enter_freeze_mode(char *path) "%s"
flexcan_enter_low_power_mode(char *path) "%s"
flexcan_exit_freeze_mode(char *path) "%s"
flexcan_exit_low_power_mode(char *path, int num_mb) "%s: number of MBs: %i"
flexcan_message_box_code_inactive(char *path, int ram_block, int mb_no, int edl, int code, int dlc, int ide, int prio, int id_std, int id_ext) "%s: ram_block: %i, mb_no: %i, edl: 0x%x, code: 0x%x, dlc: 0x%x, ide: 0x%x, prio: 0x%x, id_std: 0x%x, id_ext: 0x%x"
flexcan_message_box_code_rx_empty(char *path, int ram_block, int mb_no, int edl, int code, int dlc, int ide, int prio, int id_std, int id_ext) "%s: ram_block: %i, mb_no: %i, edl: 0x%x, code: 0x%x, dlc: 0x%x, ide: 0x%x, prio: 0x%x, id_std: 0x%x, id_ext: 0x%x"
flexcan_message_box_code_rx_ranswer(char *path, int ram_block, int mb_no, int edl, int code, int dlc, int ide, int prio, int id_std, int id_ext) "%s: ram_block: %i, mb_no: %i, edl: 0x%x, code: 0x%x, dlc: 0x%x, ide: 0x%x, prio: 0x%x, id_std: 0x%x, id_ext: 0x%x"
flexcan_message_box_code_data_frame(char *path, int ram_block, int mb_no, int edl, int code, int dlc, int ide, int prio, int id_std, int id_ext) "%s: ram_block: %i, mb_no: %i, edl: 0x%x, code: 0x%x, dlc: 0x%x, ide: 0x%x, prio: 0x%x, id_std: 0x%x, id_ext: 0x%x"
flexcan_can_bus_connected(char *path, const char *bus) "%s: connected to %s"


